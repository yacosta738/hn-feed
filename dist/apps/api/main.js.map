{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"tslib\"","webpack:///external \"@nestjs/common\"","webpack:///external \"@nestjs/mongoose\"","webpack:///external \"@nestjs/schedule\"","webpack:///./apps/api/src/app/app.service.ts","webpack:///./apps/api/src/app/posts/posts.service.ts","webpack:///external \"mongoose\"","webpack:///./apps/api/src/app/posts/schemas/post.schema.ts","webpack:///./apps/api/src/app/posts/dto/create-post.dto.ts","webpack:///external \"class-validator\"","webpack:///./apps/api/src/main.ts","webpack:///external \"@nestjs/core\"","webpack:///./apps/api/src/app/app.module.ts","webpack:///./apps/api/src/app/app.controller.ts","webpack:///./libs/api-interfaces/src/index.ts","webpack:///./apps/api/src/app/posts/posts.module.ts","webpack:///external \"rxjs/operators\"","webpack:///./apps/api/src/app/posts/posts.controller.ts","webpack:///./apps/api/src/app/posts/dto/index.ts","webpack:///./apps/api/src/app/posts/dto/update-post.dto.ts","webpack:///external \"@nestjs/mapped-types\"","webpack:///./apps/api/src/app/common/dto/pagination-query.dto.ts","webpack:///external \"@nestjs/serve-static\"","webpack:///external \"path\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","module.exports = require(\"tslib\");","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/mongoose\");","module.exports = require(\"@nestjs/schedule\");","import { Injectable } from '@nestjs/common';\nimport { Message } from '@hn-feed/api-interfaces';\n\n@Injectable()\nexport class AppService {\n  getData(): Message {\n    return { message: 'Welcome to api!' };\n  }\n}\n","import {\n  HttpService,\n  Injectable,\n  Logger,\n  NotFoundException,\n} from '@nestjs/common';\nimport { Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { IPost } from './interfaces/post.interface';\nimport { CreatePostDto, UpdatePostDto } from './dto';\nimport { Post } from './schemas/post.schema';\nimport { PaginationQueryDto } from '../common/dto/pagination-query.dto';\nimport { Cron, CronExpression } from '@nestjs/schedule';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class PostsService {\n  private readonly logger = new Logger(PostsService.name);\n  private readonly url = 'http://hn.algolia.com/api/v1/search_by_date?query=';\n\n  constructor(\n    @InjectModel(Post.name) private readonly postModel: Model<Post>,\n    private httpService: HttpService\n  ) {}\n\n  public async findAll(paginationQuery: PaginationQueryDto): Promise<Post[]> {\n    let { limit, offset } = paginationQuery;\n    limit = Number(limit);\n    offset = Number(offset);\n    return await this.postModel\n      .find({ deleted: false })\n      .sort({createdAt: -1})\n      .skip(offset)\n      .limit(limit)\n      .exec();\n  }\n\n  public async findOne(postId: string): Promise<Post> {\n    const post = await this.postModel.findById({ _id: postId }).exec();\n\n    if (!post) {\n      throw new NotFoundException(`Post #${postId} not found`);\n    }\n\n    return post;\n  }\n\n  public async create(createPostDto: CreatePostDto): Promise<IPost> {\n    const newPost = await new this.postModel(createPostDto);\n    return newPost.save();\n  }\n\n  public async update(\n    postId: string,\n    updatePostDto: UpdatePostDto\n  ): Promise<IPost> {\n    const existingPost = await this.postModel.findByIdAndUpdate(\n      { _id: postId },\n      updatePostDto\n    );\n\n    if (!existingPost) {\n      throw new NotFoundException(`Post #${postId} not found`);\n    }\n\n    return existingPost;\n  }\n\n  public async softDelete(postId: string): Promise<IPost> {\n    const post = await this.postModel.findById({ _id: postId }).exec();\n    return this.update(postId, {\n      objectID: post.objectID,\n      title: post.title,\n      url: post.url,\n      author: post.author,\n      deleted: true,\n    });\n  }\n  public async remove(postId: string): Promise<any> {\n    return this.postModel.findByIdAndRemove(postId);\n  }\n\n  private fetchDataFromAPI(query = 'nodejs') {\n    this.logger.debug('Start collect new data');\n    return this.httpService.get(`${this.url}${query}`).pipe(\n      map(\n        (response) =>\n          response.data.hits.filter((hit) => hit.story_title || hit.title) // discard post without title or story_title\n      )\n    );\n  }\n\n  @Cron(CronExpression.EVERY_HOUR)\n  collectDataTask() {\n    this.logger.debug('Collect data from service api algolia ');\n    const fromAPI = this.fetchDataFromAPI();\n    fromAPI.subscribe(\n      (hits) => this.populateDataBase(hits),\n      (error) => this.logger.error(error)\n    );\n  }\n\n  private populateDataBase(hits: []) {\n    hits.forEach(async (hit: any) => {\n      // verify if the post is in database.\n      const posts = await this.postModel\n        .find({ objectID: hit.objectID })\n        .exec();\n      if (posts && posts.length === 0) {\n        // insert new posts in database\n        const post = await this.create({\n          objectID: hit.objectID,\n          title: hit.story_title ? hit.story_title : hit.title,\n          url: hit.story_url ? hit.story_url : hit.url,\n          author: hit.author,\n          deleted: false,\n          createdAt: new Date(hit.created_at),\n        });\n        this.logger.debug(`Inserted post ${post}`);\n      }\n    });\n    this.logger.debug('End store post in database');\n  }\n}\n","module.exports = require(\"mongoose\");","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\n@Schema()\nexport class Post extends Document {\n  @Prop({ unique: true })\n  objectID: string;\n\n  @Prop()\n  title: string; // If 'story_title' is null, then use 'title'. If both are null, discard\n\n  @Prop()\n  url: string; // story_url or url\n\n  @Prop()\n  author: string;\n\n  @Prop({ default: false })\n  deleted: boolean;\n\n  @Prop()\n  createdAt: Date;\n}\n\nexport const PostSchema = SchemaFactory.createForClass(Post);\n","import {\n  MaxLength,\n  IsNotEmpty,\n  IsUrl,\n  IsString,\n  IsBoolean,\n} from 'class-validator';\n\nexport class CreatePostDto {\n  @IsNotEmpty()\n  readonly objectID: string;\n\n  @IsString()\n  @MaxLength(300)\n  @IsNotEmpty()\n  readonly title: string; // If 'story_title' is null, then use 'title'. If both are null, discard\n\n  @IsString()\n  @IsUrl()\n  readonly url: string; // story_url or url\n\n  @IsString()\n  @MaxLength(50)\n  @IsNotEmpty()\n  readonly author: string;\n\n  @IsBoolean()\n  readonly deleted: boolean;\n\n\n  @IsNotEmpty()\n  readonly createdAt: Date;\n}\n","module.exports = require(\"class-validator\");","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\n\nimport { AppModule } from './app/app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  const globalPrefix = 'api';\n  app.setGlobalPrefix(globalPrefix);\n  const port = process.env.PORT || 3333;\n  await app.listen(port, () => {\n    Logger.log('Listening at http://localhost:' + port + '/' + globalPrefix);\n  });\n}\n\nbootstrap();\n","module.exports = require(\"@nestjs/core\");","import { Module } from '@nestjs/common';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { PostsModule } from './posts/posts.module';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\n\n@Module({\n  imports: [\n    MongooseModule.forRootAsync({\n      useFactory: () => ({\n        uri: process.env.MONGODB_URI || 'mongodb://127.0.0.1:27017/hnfeed',\n        useNewUrlParser: true,\n        useFindAndModify: false,\n        useCreateIndex: true,\n      }),\n    }),\n    PostsModule,\n    ScheduleModule.forRoot(),\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'client'),\n      exclude: ['/api*']\n    })\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n","import { Controller, Get } from '@nestjs/common';\n\nimport { Message } from '@hn-feed/api-interfaces';\n\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get('hello')\n  getData(): Message {\n    return this.appService.getData();\n  }\n}\n","export * from './lib/api-interfaces';\n","import { HttpModule, Module } from '@nestjs/common';\nimport { PostsService } from './posts.service';\nimport { PostsController } from './posts.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { PostSchema, Post } from './schemas/post.schema';\nimport { ScheduleModule } from '@nestjs/schedule';\n\n@Module({\n  imports: [\n    HttpModule,\n    MongooseModule.forFeature([{ name: Post.name, schema: PostSchema }]),\n    ScheduleModule.forRoot(),\n  ],\n  providers: [PostsService],\n  controllers: [PostsController],\n})\nexport class PostsModule {}\n","module.exports = require(\"rxjs/operators\");","import {\n  Controller,\n  Get,\n  Res,\n  HttpStatus,\n  Post,\n  Body,\n  Put,\n  NotFoundException,\n  Delete,\n  Param,\n  Query,\n} from '@nestjs/common';\nimport { PostsService } from './posts.service';\nimport { CreatePostDto, UpdatePostDto } from './dto';\nimport { PaginationQueryDto } from '../common/dto/pagination-query.dto';\n\n@Controller('posts')\nexport class PostsController {\n  constructor(private postsService: PostsService) {}\n\n  @Get()\n  public async getAllPost(\n    @Res() res,\n    @Query() paginationQuery: PaginationQueryDto\n  ) {\n    const posts = await this.postsService.findAll(paginationQuery);\n    return res.status(HttpStatus.OK).json(posts);\n  }\n\n  @Get('/:id')\n  public async getPost(@Res() res, @Param('id') postId: string) {\n    const post = await this.postsService.findOne(postId);\n    if (!post) {\n      throw new NotFoundException('Post does not exist!');\n    }\n    return res.status(HttpStatus.OK).json(post);\n  }\n  @Get('/collect/data')\n  public async collectData(@Res() res) {\n    await this.postsService.collectDataTask();\n    return res.status(HttpStatus.OK).json({\n      message: 'Start collect data',\n    });\n  }\n  @Post()\n  public async addPost(@Res() res, @Body() createPostDto: CreatePostDto) {\n    try {\n      const post = await this.postsService.create(createPostDto);\n      return res.status(HttpStatus.OK).json({\n        message: 'Post has been created successfully',\n        post: post,\n      });\n    } catch (err) {\n      return res.status(HttpStatus.BAD_REQUEST).json({\n        message: 'Error: Post not created!',\n        status: 400,\n      });\n    }\n  }\n\n  @Put('/:id')\n  public async updatePost(\n    @Res() res,\n    @Param('id') postId: string,\n    @Body() updatePostDto: UpdatePostDto\n  ) {\n    try {\n      const post = await this.postsService.update(postId, updatePostDto);\n      if (!post) {\n        throw new NotFoundException('Post does not exist!');\n      }\n      return res.status(HttpStatus.OK).json({\n        message: 'Post has been successfully updated',\n        post: post,\n      });\n    } catch (err) {\n      return res.status(HttpStatus.BAD_REQUEST).json({\n        message: 'Error: Post not updated!',\n        status: 400,\n      });\n    }\n  }\n\n  @Delete('/:id')\n  public async deletePost(@Res() res, @Param('id') postId: string) {\n    if (!postId) {\n      throw new NotFoundException('Post ID does not exist');\n    }\n\n    const post = await this.postsService.softDelete(postId);\n\n    if (!post) {\n      throw new NotFoundException('Post does not exist');\n    }\n\n    return res.status(HttpStatus.OK).json({\n      message: 'Post has been deleted',\n      post: post,\n    });\n  }\n\n  @Delete('/remove/:id')\n  public async removePost(@Res() res, @Param('id') postId: string) {\n    if (!postId) {\n      throw new NotFoundException('Post ID does not exist');\n    }\n\n    const post = await this.postsService.remove(postId);\n\n    if (!post) {\n      throw new NotFoundException('Post does not exist');\n    }\n\n    return res.status(HttpStatus.OK).json({\n      message: 'Post has been deleted',\n      post: post,\n    });\n  }\n}\n","export * from './create-post.dto';\nexport * from './update-post.dto';\n","import { PartialType } from '@nestjs/mapped-types';\nimport { CreatePostDto } from './create-post.dto';\n\nexport class UpdatePostDto extends PartialType(CreatePostDto) {}\n","module.exports = require(\"@nestjs/mapped-types\");","import { IsOptional, IsPositive } from 'class-validator';\n\nexport class PaginationQueryDto {\n  @IsOptional()\n  @IsPositive()\n  limit: number;\n\n  @IsOptional()\n  @IsPositive()\n  offset: number;\n}\n","module.exports = require(\"@nestjs/serve-static\");","module.exports = require(\"path\");"],"sourceRoot":""}